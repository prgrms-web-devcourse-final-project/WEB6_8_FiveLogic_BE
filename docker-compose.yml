services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_NOTIFY_KAFKA_ENABLE_PRIMARY=on
      - MINIO_NOTIFY_KAFKA_BROKERS_PRIMARY=kafka:29092
      - MINIO_NOTIFY_KAFKA_TOPIC_PRIMARY=s3-events
      - MINIO_NOTIFY_KAFKA_VERSION_PRIMARY=2.7.0
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    depends_on:
      - kafka
  minio-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minio-consumer
    depends_on:
      - kafka
      - minio
    environment:
      - KAFKA_TOPIC=s3-events
      - KAFKA_BOOTSTRAP=kafka:29092    # 컨테이너 네트워크 내부 주소
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - DOWNLOAD_DIR=/downloads
    volumes:
      - ./downloads:/downloads

  spring-boot:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: spring-boot
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    restart: unless-stopped
    expose:
      - "8080"
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - spring-boot
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
volumes:
  minio-data:
